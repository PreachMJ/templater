@ global.form = type_mixin("form");

.form.default(data) {
    @{
        data = data || {}
        width = data.width || 220;
    }

    margin: 0 0 1.5em;
    padding-right: 10px;

    fieldset {
        padding: 0;
        margin: 0;
        border: 0;
    }

    // Groups of fields with labels on top (legends)
    legend {
        display: block;
        width: 100%;
        padding: 0;
        margin-bottom: 2em;
        font-size: 1.5em;
        line-height: 2em;
        color: #333;
        border: 0;
        border-bottom: 1px solid #eee;
    }

    // Identify controls by their labels
    label {
        display: block;
        margin-bottom: 5px;
        color: #333;
    }

    // Inputs, Textareas, Selects
    input,
    textarea,
    select,
    .uneditable-input {
        display: inline-block;
        width: 100%;
        height: 1.5em;
        padding: 4px;
        margin-right: -10px;
        margin-bottom: 9px;
        color: #777;
        border: 1px solid #ccc;
        .border_radius('3px');
    }
    .uneditable-textarea {
        width: auto;
        height: auto;
    }

    // Inputs within a label
    label input,
    label textarea,
    label select {
        display: block;
    }

    // Mini reset for unique input types
    input[type="image"],
    input[type="checkbox"],
    input[type="radio"] {
        width: auto;
        height: auto;
        padding: 0;
        margin: 3px 0;
        *margin-top: 0; /* IE7 */
        line-height: normal;
        border: 0;
        cursor: pointer;
        border-radius: 0 e("\0/"); // Nuke border-radius for IE9 only
    }

    // Reset the file input to browser defaults
    input[type="file"] {
        padding: initial;
        line-height: initial;
        border: initial;
        background-color: #fff;
        background-color: initial;
        .box_shadow('none');
    }

    // Help out input buttons
    input[type="button"],
    input[type="reset"],
    input[type="submit"] {
        width: auto;
        height: auto;
    }

    // Set the height of select and file controls to match text inputs
    select,
    input[type="file"] {
        height: 28px; /* In IE7, the height of the select element cannot be changed by height, only font-size */
        *margin-top: 4px; /* For IE7, add top margin to align select with labels */
        line-height: 28px;
    }

    // Chrome on Linux and Mobile Safari need background-color
    select {
        width: @{width}px; // default input width + 10px of padding that doesn't get applied
        background-color: #fff;
    }

    // Make multiple select elements height not fixed
    select[multiple],
    select[size] {
        height: auto;
    }

    // Remove shadow from image inputs
    input[type="image"] {
        .box_shadow('none');
    }

    // Make textarea height behave
    textarea {
        height: auto;
    }

    // Hidden inputs
    input[type="hidden"] {
        display: none;
    }

    // CHECKBOXES & RADIOS
    // -------------------

    // Indent the labels to position radios/checkboxes as hanging
    .radio,
    .checkbox {
        padding-left: 18px;
    }
    .radio input[type="radio"],
    .checkbox input[type="checkbox"] {
        float: left;
        margin-left: -18px;
    }

    // Move the options list down to align with labels
    .controls > .radio:first-child,
    .controls > .checkbox:first-child {
        padding-top: 5px; // has to be padding because margin collaspes
    }

    // Radios and checkboxes on same line
    .radio.inline,
    .checkbox.inline {
        display: inline-block;
        margin-bottom: 0;
        vertical-align: middle;
    }
    .radio.inline + .radio.inline,
    .checkbox.inline + .checkbox.inline {
        margin-left: 10px; // space out consecutive inline controls
    }
    // But don't forget to remove their padding on first-child
    .controls > .radio.inline:first-child,
    .controls > .checkbox.inline:first-child {
        padding-top: 0;
    }



    // FOCUS STATE
    // -----------

    input,
    textarea {
        .box_shadow('inset 0 1px 1px rgba(0,0,0,.075)');
        .transition('border linear .2s, box-shadow linear .2s');
    }
    input:focus,
    textarea:focus {
        border-color: rgba(82,168,236,.8);
        @ shadow = 'inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(82,168,236,.6)';
        .box_shadow(shadow);
        outline: 0;
        outline: thin dotted \9; /* IE6-8 */
    }
    input[type="file"]:focus,
    input[type="checkbox"]:focus,
    select:focus {
        .box_shadow('none'); // override for file inputs
        .tab_focus();
    }

    // DISABLED STATE
    // --------------

    // Disabled and read-only inputs
    input[disabled],
    select[disabled],
    textarea[disabled],
    input[readonly],
    select[readonly],
    textarea[readonly] {
        background-color: #f5f5f5;
        border-color: #ddd;
        cursor: not-allowed;
    }

    // FORM FIELD FEEDBACK STATES
    // --------------------------

    // HTML5 invalid states
    // Shares styles with the .control-group.error above
    input:focus:required:invalid,
    textarea:focus:required:invalid,
    select:focus:required:invalid {
        color: #b94a48;
        border-color: #ee5f5b;
        &:focus {
            border-color: darken(#ee5f5b, 10%);
            .box_shadow('0 0 6px '+lighten('#ee5f5b', 20));
        }
    }

    // FORM ACTIONS
    // ------------

    .form-actions {
        padding: 1.5em 20px;
        margin-top: 1.5em;
        margin-bottom: 1.5em;
        background-color: #f5f5f5;
        border-top: 1px solid #ddd;
    }

    // For text that needs to appear as an input but should not be an input
    .uneditable-input {
        display: block;
        background-color: white;
        border-color: #eee;
        .box_shadow('inset 0 1px 2px rgba(0,0,0,.025)');
        cursor: not-allowed;
    }

    // Placeholder text gets special styles; can't be bundled together though for some reason
    .placeholder('#aaa');
}