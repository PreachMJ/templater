.buttonBackground(startColor, endColor) {
    // gradientBar will set the background to a pleasing blend of these, to support IE<=9
    .gradient.bar(startColor, endColor);
    .reset_filter();

    // in these cases the gradient won't cover the background, so we override
    &:hover, &:active, &.active, &.disabled, &[disabled] {
        background-color: @endColor;
    }

    // IE 7 + 8 can't handle box-shadow to show active, so we darken a bit ourselves
    &:active,
    &.active {
        background-color: @{darken(endColor, 10)} e("\9");
    }
}

@ global.button = type_mixin("button, a.button, input[type=button], input[type=submit]");
.button.default(data) {
    display: inline-block;
    padding: 4px 10px;
    color: #333;
    text-align: center;
    text-shadow: 0 1px 1px rgba(255,255,255,.75);
    .gradient.vertical_three_colors('white', 'white', '25%', darken('white', 10)); // Don't use .gradientbar() here since it does a three-color gradient
    border: 1px solid #ccc;
    border-bottom-color: #bbb;
    .border_radius('4px');
    .box_shadow('inset 0 1px 0 rgba(255,255,255,.2), 0 1px 2px rgba(0,0,0,.05)');
    cursor: pointer;
    outline: none;
    
    &:hover {
        color: #333;
        text-decoration: none;
        background-color: @{darken('#fff', 10)};
        background-position: 0 -15px;

        // transition is only when going to hover, otherwise the background
        // behind the gradient (there for IE<=9 fallback) gets mismatched
        .transition('background-position .1s linear');
    }

    // Active state
    &.active,
    &:active {
        background-image: none;
        .box_shadow('inset 0 2px 4px rgba(0,0,0,.15), 0 1px 2px rgba(0,0,0,.05)');
        background-color: @{darken('#fff', 10)};
        background-color: @{darken('#fff', 15)} e("\9");
        color: rgba(0,0,0,0.5);
        outline: 0;
    }

    // Disabled state
    &.disabled,
    &[disabled] {
        cursor: default;
        background-image: none;
        background-color: @{darken('#fff', 10)};
        .opacity(65);
        .box_shadow('none');
    }   
    
    &.small {
        padding: 2px 5px;
        font-size: 0.9em;
    }
    
    &.large {
        padding: 8px 20px;
        font-size: 1.4em;
    }
    
    &.green, &.darkgreen, &.orange, &.blue, &.red, &.darkgray {
        text-shadow: 0 -1px 0 rgba(0,0,0,.25);
        color: white;
    }
    
    &.green     { .buttonBackground('#62c462', '#51a351'); }
    &.darkgreen { .buttonBackground(darken('#62c462',20), darken('#51a351',20)); }
    &.orange    { .buttonBackground(lighten('orange', 15), 'orange'); }
    &.blue      { .buttonBackground('#5bc0de', '#2f96b4'); }
    &.red       { .buttonBackground('#ee5f5b', '#bd362f'); }
    &.pink      { .buttonBackground(lighten('pink', 15), 'pink'); }
    &.darkgray  { .buttonBackground("#999", "#777"); }
    &.lightgray { .buttonBackground("#eee", "#ccc"); }
}