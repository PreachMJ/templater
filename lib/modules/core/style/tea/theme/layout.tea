@ global.layout = type_mixin();
@ global.layout.item = type_mixin();
@ global.layout.container = type_mixin();
@ global.layout.border = type_mixin();

.layout.border.default(border) {
    @{
        if (!border) return;
        var width = border.width || 0;
        var cl = border.color!==undefined ? color(border.color) : 'black';
        
        $.each(["left","right","top","bottom"],function(i,where){
            if (border[where]!==false) {
                @{
                    border-@where: @width solid @cl;
                }
            }
        });
    }
}

.layout.container.default(data) {

    @ data = data || {};
    @ if (data.height && data.height!="auto")
        height: @data.height;
        
    @ if (data.padding)
        padding: @data.padding;
        
    min-height: 30px;
    
    @ if (data.layout && data.layout.height)
        height: @data.layout.height;
        
    @ if (data.border)
        .layout.border(data.border);
        
    @ if (data.borderRadius)
        border-radius: @data.borderRadius;
        
    .box_sizing('border-box');
    .background(data.background,data);
    
    > .container {
        position: relative;
        margin-bottom: -10px;
        > * {
            margin-bottom: 10px;
        }
    }
}

@ var componentWidth = {};

.layout.default(data) {
    body {
        .background(data.background,data);
    }
    
    @ eachComponent(function(cmp,id,parent,type){ 
        @{ 
            if (cmp.children) $.each(cmp.children, function(){
                componentWidth[this.value.id] = componentWidth[id] || 100;
            }); 
        }
    
        @ if (type=="container" || type=="form") {
            #@{id} {
                @ var cnt = data.cmp[id] || {};
                .layout.container(cnt);
                @ if (!parent) {
                    > .container {
                        width: @data.sheet.width;
                        margin: 0 auto;
                    }
                @ }
            }

            @{
                var w = 0;
                var pg = 2;
                var col_num = 12;
                var col_w = (100 - pg * (col_num-1)) / col_num;

                var total = componentWidth[id] || 100;
            }

            @ if (cmp.children) $.each(cmp.children, function(){
                @{ 
                    var sid = this.value.id;
                    var sub = data.cmp[sid] ? (data.cmp[sid].layout || {}) : {};
                    var dw = total;
                    var position = false;
                    var auto = false;

                    if (sub.type=="part") {
                        if (sub.part=="of") dw = (total)/4;
                        else if (sub.part=="ot") dw = (total)/3;
                        else if (sub.part=="oh") dw = (total)/2;
                        else if (sub.part=="tt") dw = (total)/3*2;
                        else if (sub.part=="tf") dw = (total)/4*3;
                    } 
                    else if (sub.type!='absolute') {
                        if (sub.column) {
                            var count = sub.column || col_num;
                            dw = count * col_w + pg * (count - 1);
                        } else {
                            auto = true;
                        }
                    }

                    if (w + dw > total) w = 0;
                    var margin = w==0 ? 0 : pg;
                    
                    if (sub.type=="part") margin = 0;
                    
                    w += dw;

                    componentWidth[sid] = dw;
                    var relativeWidth = dw / total * 100;
                    var relativeMargin = margin / total * 100;
                    
                    var pos = sub.position || {};
                }

                body #@sid {
                    @ if (sub.type=='absolute') {
                        display: block;
                        position: absolute;
                        
                        @ if (sub.width)
                            width: @sub.width;
                            
                        left: @{pos.x || 0};
                        top: @{pos.y || 0};
                    
                    @ } else if (sub.type=='centered') {
                        
                        width: auto;
                        display: block;
                        margin-left: auto;
                        margin-right: auto;
                        
                    @ } else {
                        position: relative;
                        @ if (auto) {
                            display: block;
                        @ } else {
                            display: inline-block;
                            width: @{relativeWidth}%;
                            margin-left: @{relativeMargin}%;
                        @ }
                    @ }

                    vertical-align: top;
                    @ if (sub.margin)
                        margin-top: @sub.margin;
                    @ if (pos.z)
                        z-index: @pos.z;
                }

                @ if (sub.overflow) {
                    #@{id} #@{sid} {
                        margin-bottom: -@sub.overflow;
                    }
                @ }
            @ })
        @ }
    @ })
}